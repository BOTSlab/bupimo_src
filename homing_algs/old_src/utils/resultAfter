VLFeat constructor called

--testGetBestSolution-------------------------------------
	input: -7 -3 -2 5 8 
Test passed!
	solution: 0 1 1 1 0 

--testGetBestSolution-------------------------------------
	input: 10 -2 2 
Test passed!
	solution: 0 1 1 

--testGetBestSolution-------------------------------------
	input: -2 2 3 
Test passed!
	solution: 1 1 0 

--testGetBestSolution-------------------------------------
	input: 2 -5 8 4 10 -14 3 
Test passed!
	solution: 1 0 1 1 0 1 0 

--testGetBestSolution-------------------------------------
	input: 2 -5 8 4 10 -16 3 
Test passed!
	solution: 1 0 0 1 1 1 0 

--testGetBestSolution-------------------------------------
	input: -2 1 3 
Test passed!
	solution: 1 1 0 

--testGetBestSolution-------------------------------------
	input: 3 -2 1 
Test passed!
	solution: 0 1 1 

--testGetBestSolution-------------------------------------
	input: 2 -5 8 4 10 -30 4 
Test passed!
	solution: 0 1 0 1 0 0 0 

--testGetBestSolution-------------------------------------
	input: -4 -3 -1 1 
Test passed!
	solution: 0 0 1 1 

--testIsSumPossible---------------------------------------
	input: -2 -1 0 1 2 
Test passed!

--testIsSumPossible---------------------------------------
	input: -2 -1 0 1 2 
Test passed!

--testIsSumPossible---------------------------------------
	input: -2 -1 0 1 2 
Test passed!

--testIsSumPossible---------------------------------------
	input: -2 -1 0 1 2 
Test passed!

--testIsSumPossible---------------------------------------
	input: -2 -1 0 1 2 
Test passed!

--testIsSumPossible---------------------------------------
	input: -2 -1 0 1 2 
Test passed!

--testIsSumPossible---------------------------------------
	input: -2 -1 0 1 2 
Test passed!

--testIsSumPossible---------------------------------------
	input: -5 -4 -3 
Test passed!

--testIsSumPossible---------------------------------------
	input: -5 -4 -3 
Test passed!

--testIsSumPossible---------------------------------------
	input: -5 -4 -3 
Test passed!

--testIsSumPossible---------------------------------------
	input: -5 -4 -3 
Test passed!

--testIsSumPossible---------------------------------------
	input: -5 -4 -3 
Test passed!

--testIsSumPossible---------------------------------------
	input: -5 -4 -3 
Test passed!

--testIsSumPossible---------------------------------------
	input: -5 -4 -3 
Test passed!

--testIsSumPossible---------------------------------------
	input: -5 -4 -3 
Test passed!

--testIsSumPossible---------------------------------------
	input: 5 4 3 
Test passed!

--testIsSumPossible---------------------------------------
	input: 5 4 3 
Test passed!

--testIsSumPossible---------------------------------------
	input: 5 4 3 
Test passed!

--testIsSumPossible---------------------------------------
	input: 5 4 3 
Test passed!

--testIsSumPossible---------------------------------------
	input: 5 4 3 
Test passed!

--testIsSumPossible---------------------------------------
	input: 5 4 3 
Test passed!

--testIsSumPossible---------------------------------------
	input: 5 4 3 
Test passed!

--testIsSumPossible---------------------------------------
	input: 5 4 3 
Test passed!

--test getBiggestSolutionForSum--------------------------------
input: {2, 20, -1, -10, 3, -2, -20, 1, 10}
	sum: -3
	found: 1
	solution: 20 -1 -10 -2 -20 10 

	sum: -2
	found: 1
	solution: 20 -1 -10 -2 -20 1 10 

	sum: -1
	found: 1
	solution: 2 20 -1 -10 -2 -20 10 

	sum: 0
	found: 1
	solution: 2 20 -1 -10 -2 -20 1 10 

	sum: 1
	found: 1
	solution: 20 -1 -10 3 -2 -20 1 10 

	sum: 2
	found: 1
	solution: 2 20 -1 -10 3 -2 -20 10 

	sum: 3
	found: 1
	solution: 2 20 -1 -10 3 -2 -20 1 10 

	sum: 4
	found: 1
	solution: 2 20 -10 3 -2 -20 1 10 

	sum: 5
	found: 1
	solution: 2 20 -1 -10 3 -20 1 10 

VLFeat destructor called
